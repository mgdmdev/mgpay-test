doctype html
html
  head
    title Payment Options - MGPay Test App
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    link(rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css")
    style.
      .provider-card {
        transition: all 0.3s;
        cursor: pointer;
      }
      .provider-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.1);
      }
      .provider-logo {
        max-height: 40px;
        margin-bottom: 10px;
      }
  body
    .container.py-5
      .row.mb-5
        .col-12
          a.btn.btn-outline-secondary.mb-3(href="/") ‚Üê Back to Home
          h1.display-4 Choose Payment Method
          p.lead Order ##{order.id.substring(0, 8)}
          hr
      
      .row.mb-5
        .col-md-6.mb-3
          .card.shadow-sm
            .card-header.bg-primary.text-white
              h3 Order Details
            .card-body
              p.card-text
                strong Amount: 
                | GHS #{order.amount}
              p.card-text
                strong Customer: 
                | #{order.customer}
              p.card-text
                strong Order ID: 
                | #{order.id}
              p.card-text
                strong Status: 
                span.badge.bg-warning #{order.status}
      
        .col-md-6.mb-3
          .card.shadow-sm
            .card-header.bg-secondary.text-white
              h3 Note
            .card-body
              p This is a simplified test app. In a real implementation:
              ol
                li Your app would integrate directly with payment providers (or MGPay's upcoming checkout API)
                li Providers would send webhooks to MGPay
                li MGPay would validate and forward the webhook to your app
                li Your app would process the webhook and update the order status
      
      .row.mb-5
        .col-12
          h2 Select Payment Provider
          p Choose a provider to simulate the payment flow
      
      .row
        .col-md-6.mb-4
          form(action="/pay/paystack" method="POST")
            input(type="hidden" name="orderId" value=order.id)
            input(type="hidden" name="amount" value=order.amount)
            input(type="hidden" name="customer" value=order.customer)
            .card.provider-card.h-100.border-success
              .card-body.text-center
                img.provider-logo(src="https://paystack.com/images/Paystack-Mark-Color.png" alt="Paystack Logo")
                h3 Pay with Paystack
                p Process payments via card, bank transfer, or mobile money
                .mb-3
                  label.form-label(for="email") Email (required for Paystack)
                  input.form-control#email(type="email" name="email" required placeholder="user@example.com")
                button.btn.btn-success.mt-3.w-100(type="submit") Continue with Paystack
        
        .col-md-6.mb-4
          .card.provider-card.h-100.border-secondary
            .card-body.text-center
              img.provider-logo(src="https://flutterwave.com/images/logo/full.svg" alt="Flutterwave Logo")
              h3 Pay with Flutterwave
              p Process payments via card, mobile money, USSD, etc.
              button.btn.btn-secondary.mt-3.w-100(disabled) Coming Soon
      
      .row.mt-5
        .col-12
          .card.bg-light
            .card-body
              h3 How MGPay Works with Payment Providers
              p.mb-3 In a production environment, the flow would be:
              ol
                li Your app initiates a payment with a provider (Paystack/Flutterwave)
                li You include <code>metadata.service</code> in your payment request
                li Configure the provider to send webhooks to MGPay
                li MGPay validates and processes the webhook
                li MGPay forwards the webhook to your registered service endpoint
                li Your service updates the order status based on the webhook
    
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js")